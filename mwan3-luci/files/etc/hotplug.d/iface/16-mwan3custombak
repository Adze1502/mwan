#!/bin/sh

# to enable this script uncomment the case loop at the bottom
# to report the contents of $REPORTDATA modify the lines in the send_reportdata function

send_reportdata() {
	# insert your code here to report the contents of $REPORTDATA
	echo "$REPORTDATA"
}

search_rules() {
	local AFFECTED
	config_get SRC_IP "$1" src_ip
	config_get SRC_PORT "$1" src_port
	config_get DEST_IP "$1" dest_ip
	config_get DEST_PORT "$1" dest_port
	config_get PROTO "$1" proto
	config_get EQUALIZE "$1" equalize
	[ "$EQUALIZE" == "1" ] && EQUALIZE="Yes" || EQUALIZE="No"
	config_get RPOL "$1" use_policy
	[ "$(echo "$POLICYLIST" | grep -c "$RPOL")" != "0" ] && AFFECTED="1"
	[ "$AFFECTED" == "1" ] && RULELIST=""$RULELIST"++"$1":+source*address*-*"$SRC_IP"+source*port*-*"$SRC_PORT"+destination*address*-*"$DEST_IP"+destination*port*-*"$DEST_PORT"+protocol*-*"$PROTO"+policy*assigned*-*"$RPOL"+equalize*-*"$EQUALIZE""
}

search_policies() {
	local AFFECTED
	config_get PMEM "$1" use_member
	[ "$PMEM" ] && PMEM="$(echo "$PMEM" | tr -d '\n' | sed 's/ /\n/g')" && echo "$PMEM" > /tmp/mw3hptmp
	while read LINE; do
		[ "$(echo "$MEMBERLIST" | grep -c "$LINE")" != "0" ] && AFFECTED="1"
	done < /tmp/mw3hptmp
	[ "$AFFECTED" == "1" ] && POLICYLIST=""$POLICYLIST"++"$1":+"$PMEM""
}

search_members() {
	config_get IFACE "$1" interface
	if [ "$INTERFACE" == "$IFACE" ]; then
		MEMBERLIST=""$MEMBERLIST"+"$1""
	fi
}

search_interfaces() {
	RULENUM=$((RULENUM+1))
	local RULE="$(ip route list table "$RULENUM")"
	config_get TRACK_IP "$1" track_ip
	[ "$TRACK_IP" ] && TRACK_IP="(monitored)" || TRACK_IP="(not monitored)"
	if [ "$RULE" ]; then
		CURRENTSTATUS=""$CURRENTSTATUS"+"$1"*-*"ONLINE*$TRACK_IP""
	else
		CURRENTSTATUS=""$CURRENTSTATUS"+"$1"*-*"OFFLINE*$TRACK_IP""
	fi
}

report_event() {
	RULENUM=1000
	CURRENTSTATUS="---------------+CURRENT*STATUS:+---------------+"
	MEMBERLIST="-----------------+MEMBERS*AFFECTED:+-----------------+"
	POLICYLIST="------------------+POLICIES*AFFECTED:+------------------"
	RULELIST="---------------+RULES*AFFECTED:+---------------"
	local EVENTINFO="["$ACTION"] event triggered on interface ["$INTERFACE"] on "$(date)""
	local MWAN3LOG="$(echo "------------------------------------------------------------------+Last*50*MWAN3*systemlog*entries.*Newest*entries*sorted*at*the*top:+------------------------------------------------------------------++$(logread | grep mwan3 | tail -n 50 | sed 'x;1!H;$!d;x')" | sed -e 's/+/\n/g' -e 's/\*/ /g')"

	config_load mwan3

	# get current status of all configured MWAN3 interfaces
	config_foreach search_interfaces interface
	CURRENTSTATUS="$(echo "$CURRENTSTATUS" | sed -e 's/+/\n/g' -e 's/\*/ /g')"

	# create list of affected members
	config_foreach search_members member
	MEMBERLIST="$(echo "$MEMBERLIST" | sed -e 's/+/\n/g' -e 's/\*/ /g')"

	# create list of affected policies
	config_foreach search_policies policy
	POLICYLIST="$(echo "$POLICYLIST" | sed -e 's/+/\n/g' -e 's/\*/ /g')"

	# create list of affected rules
	config_foreach search_rules rule
	RULELIST="$(echo "$RULELIST" | sed -e 's/+/\n/g' -e 's/\*/ /g')"

	# combine data into single variable for reporting
	REPORTDATA="$(echo "$EVENTINFO,$CURRENTSTATUS,$MEMBERLIST,$POLICYLIST,$RULELIST,$MWAN3LOG" | sed 's/,/\n\n/g')"

	# cleanup temp files
	[ -e /tmp/mw3hptmp ] && rm /tmp/mw3hptmp

	# report value of variable $REPORTDATA
	send_reportdata
}

#case "$ACTION" in
#	ifup)
#		report_event
#	;;

#	ifdown)
#		report_event
#	;;
#esac
