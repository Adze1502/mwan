#!/bin/sh

mwan3_basic_iptables()
{
	if ! iptables -S mwan3_rules -t mangle &> /dev/null; then
		iptables -N mwan3_rules -t mangle
	fi

	if ! iptables -S mwan3_default -t mangle &> /dev/null; then
		iptables -N mwan3_default -t mangle
	fi

	if ! iptables -S mwan3_pre -t mangle &> /dev/null; then
		iptables -N mwan3_pre -t mangle
		iptables -A mwan3_pre -t mangle -j CONNMARK --restore-mark --nfmask 65280 --ctmask 65280
		iptables -A mwan3_pre -t mangle -m mark ! --mark 32768/32768 -j mwan3_default
		iptables -A mwan3_pre -t mangle -m mark --mark 0/65280 -j mwan3_rules
	fi

	if ! iptables -S mwan3_post -t mangle &> /dev/null; then
		iptables -N mwan3_post -t mangle
		iptables -A mwan3_post -t mangle -m mark --mark 32768/32768 -j MARK --set-xmark 0/32768
		iptables -A mwan3_post -t mangle -j CONNMARK --save-mark --nfmask 65280 --ctmask 65280
	fi

	if ! iptables -S PREROUTING -t mangle | grep mwan3_pre &> /dev/null; then
		iptables -A PREROUTING -t mangle -j mwan3_pre
	fi

	if ! iptables -S INPUT -t mangle | grep mwan3_post &> /dev/null; then
		iptables -A INPUT -t mangle -j mwan3_post
	fi

	if ! iptables -S OUTPUT -t mangle | grep mwan3_pre &> /dev/null; then
		iptables -A OUTPUT -t mangle -j mwan3_pre
	fi

	if ! iptables -S POSTROUTING -t mangle | grep mwan3_post &> /dev/null; then
		iptables -A POSTROUTING -t mangle -j mwan3_post
	fi

	iptables -F mwan3_rules -t mangle
}

mwan3_interface_iptables()
{
	iptables -D mwan3_pre -t mangle -i $DEVICE -j MARK --set-xmark $((($interface_number*256)+32768))/65280 &> /dev/null
	iptables -D mwan3_post -t mangle -o $DEVICE -m mark ! --mark 32768/32768 -j MARK --set-xmark $(($interface_number*256))/65280 &> /dev/null

	if [ $ACTION = "ifup" ] ; then
		iptables -I mwan3_pre 2 -t mangle -i $DEVICE -j MARK --set-xmark $((($interface_number*256)+32768))/65280 &> /dev/null
		iptables -I mwan3_post 1 -t mangle -o $DEVICE -m mark ! --mark 32768/32768 -j MARK --set-xmark $(($interface_number*256))/65280 &> /dev/null
	fi
}

mwan3_connected_iptables()
{
	iptables -F mwan3_default -t mangle
	iptables -A mwan3_default -t mangle -d 224.0.0.0/3 -m mark ! --mark 32768/32768 -j MARK --set-xmark 32768/32768
	iptables -A mwan3_default -t mangle -d 127.0.0.0/8 -m mark ! --mark 32768/32768 -j MARK --set-xmark 32768/32768

	local connected_networks

	for connected_networks in $(ip -4 route list table main scope link | awk '{print $1}' | egrep '[0-9]{1,3}(\.[0-9]{1,3}){3}'); do
		iptables -A mwan3_default -t mangle -d $connected_networks -m mark ! --mark 32768/32768 -j MARK --set-xmark 32768/32768 &> /dev/null
	done
}

mwan3_interface_routes_and_rules()
{
	local route_args

	route_args=$(eval echo $(ip -4 route list table main dev $DEVICE default | awk '{print "nexthop",$2,$3,"dev","$DEVICE"}'))

	ip -4 route flush table $(($interface_number+1000))
	[ $ACTION = "ifup" ] && ip -4 route add table $(($interface_number+1000)) default $route_args

	for each in $(ip -4 rule list | awk '$1 ==  ("'$(($interface_number+1000)):'")' | awk '{print $1}'); do
		ip -4 rule del pref $(($interface_number+1000))
	done

	[ $ACTION = "ifup" ] && ip -4 rule add pref $(($interface_number+1000)) fwmark $(($interface_number*256))/65280 table $(($interface_number+1000))
}

mwan3_policy_routes_and_rules()
{
	local current_policy
	local dest_ip
	local dest_port
	local equalize
	local equalize_ifaces
	local iftotalweight
	local lowest_metric
	local member
	local metric
	local nf_mark
	local other_device
	local other_iface
	local other_route_args
	local other_weight
	local policy_number
	local probability
	local proto
	local rulenumber
	local src_ip
	local src_port
	local total_policies
	local use_policy
	local weight

	mwan3_get_weight_for_device()
	{
		other_iface=$(uci show -P /var/state network | awk -F'=' ' $2 == ("'$other_device'") ' | grep ifname | awk -F'.' ' { print $2 } ' | grep -v '@')

		for member in $(uci get mwan3.$1.use_member); do
			if [ $(uci get -P /var/state mwan3.$member.interface) = "$other_iface" ]; then
				other_weight=$(uci get -P /var/state mwan3.$member.weight)
			fi
		done
	}

	config_foreach mwan3_policy_rules policy
	config_foreach mwan3_rules_iptables rule
}

mwan3_policy_rules()
{
	total_policies=$(($total_policies+1))
	policy_number=$(($total_policies+1015))
	eval mwp$1=$(($policy_number-1000))
	current_policy=$1

	if [ $total_policies -lt 85 ] ; then

		config_list_foreach $1 use_member mwan3_policy_routes

		ip -4 rule del pref $policy_number &> /dev/null

		if [ -n "$(ip -4 route list table $policy_number default)" ]; then
			ip -4 rule add pref $policy_number fwmark $((($policy_number-1000)*256))/65280 table $policy_number &> /dev/null
		else
			ip -4 route flush table $policy_number
		fi
	else
		logger -t mwan3 "Maximum number of policies ($total_policies) reached"
	fi
}

mwan3_policy_routes()
{
	if [ $(uci get -P /var/state mwan3.$1.interface) = "$INTERFACE" ]; then
		metric=$(uci get -P /var/state mwan3.$1.metric)
		weight=$(uci get -P /var/state mwan3.$1.weight)

		route_args=$(eval echo $(ip -4 route list table main dev $DEVICE default | awk '{print "nexthop",$2,$3,"dev",("'$DEVICE'")}'))

		if [ -z "$other_route_args" ]; then
			other_route_args=$(eval echo $(ip -4 route list table $policy_number | awk '/default  metric ('$metric')/ {flag=1;next} /default/{flag=0} flag { print }' | awk '$1 == "nexthop"' | grep -v "dev $DEVICE " | sort -u))
		fi

		if [ -z "$other_route_args" ]; then
			other_device=$(eval echo $(ip -4 route list table $policy_number default | grep "^default via" | awk '$5 != ("'$DEVICE'")' | awk '$7 == ("'$metric'")' | sed 's/.*dev \([^ ]*\) .*/\1/'))

			if [ -n "$other_device" ]; then
				mwan3_get_weight_for_device $current_policy
				other_route_args=$(eval echo $(ip -4 route list table $policy_number default | grep "^default via" | awk '$5 != ("'$DEVICE'")' | awk '$7 == ("'$metric'")' | awk '{print "nexthop",$2,$3,"dev","$other_device","weight","$other_weight"}'))
			fi
		fi

		ip -4 route del table $policy_number metric $metric default &> /dev/null

		[ $ACTION = "ifdown" ] && ip -4 route add table $policy_number metric $metric default $other_route_args &> /dev/null
		[ $ACTION = "ifup" ] && ip -4 route add table $policy_number metric $metric default $route_args weight $weight $other_route_args &> /dev/null

		unset metric
		unset weight
		unset other_route_args
		unset other_device
		unset other_iface
		unset other_weight
	fi
}

mwan3_rules_iptables()
{
	config_get proto $1 proto
	config_get src_ip $1 src_ip 0.0.0.0/0
	config_get src_port $1 src_port 0:65535
	config_get dest_ip $1 dest_ip 0.0.0.0/0
	config_get dest_port $1 dest_port 0:65535
	config_get use_policy $1 use_policy
	config_get_bool equalize $1 equalize 0

	mwan3_add_rule_iptables()
	{
		case $proto in
			icmp)
			iptables -I mwan3_rules $rulenumber -t mangle -p "$proto" -s "$src_ip" -d "$dest_ip" -m mark --mark 0/65280 $probability -j MARK --set-xmark $(($nf_mark*256))/65280 &> /dev/null
			;;
			tcp|udp)
			iptables -I mwan3_rules $rulenumber -t mangle -p "$proto" -s "$src_ip" -d "$dest_ip" -m multiport --sports "$src_port" -m multiport --dports "$dest_port" -m mark --mark 0/65280 $probability -j MARK --set-xmark $(($nf_mark*256))/65280 &> /dev/null
			;;
			*)
			iptables -I mwan3_rules $rulenumber -t mangle -s "$src_ip" -d "$dest_ip" -m mark --mark 0/65280 $probability -j MARK --set-xmark $(($nf_mark*256))/65280 &> /dev/null
			;;
		esac
	}

	if [ $use_policy = default ] ; then
		nf_mark=128
	else
		eval nf_mark=$(echo '$'mwp$use_policy)
	fi

	if [ -n "$nf_mark" ] ; then
		rulenumber=$(($(iptables -L mwan3_rules -t mangle -n | wc -l)-1))

		if [ "$equalize" -eq 1 ] ; then
			lowest_metric=$(ip -4 route list table $(($nf_mark+1000)) | grep -m 1 default | egrep -o 'metric [0-9]{1,4}' | awk '{print $2}')
			equalize_ifaces=$(ip -4 route list table $(($nf_mark+1000)) | awk '/default  metric ('$lowest_metric')/ {flag=1;next} /default/{flag=0} flag { print }' | sed 's/.*dev \([^ ]*\) .*/\1/')
			iftotalweight=0

			if [ -n "$equalize_ifaces" ]; then
				for other_device in $equalize_ifaces; do
					mwan3_get_weight_for_device $use_policy
					iftotalweight=$(($other_weight+$iftotalweight))
					eval nf_mark=$(echo '$'mwif$other_iface)
					probability=$(($other_weight*1000/$iftotalweight))

					if [ $probability -lt 10 ]; then
						probability="0.00${probability}"
						elif [ $probability -lt 100 ]; then
						probability="0.0${probability}"
						elif [ $probability -lt 1000 ]; then
						probability="0.${probability}"
					else
						probability="1"
					fi

					probability="-m statistic --mode random --probability ${probability}"
					mwan3_add_rule_iptables
					unset probability
				done
			fi
		else
			mwan3_add_rule_iptables
		fi
	fi
}

mwan3_track()
{
	local track_ips
	local reliability
	local count
	local timeout
	local interval
	local down
	local up

	mwan3_list_track_ips()
	{
		track_ips="$1 $track_ips"
	}
	config_list_foreach $INTERFACE track_ip mwan3_list_track_ips

	if [ -n "$track_ips" ]; then
		config_get reliability $INTERFACE reliability 1
		config_get count $INTERFACE count 1
		config_get timeout $INTERFACE timeout 4
		config_get interval $INTERFACE interval 10
		config_get down $INTERFACE down 5
		config_get up $INTERFACE up 5

		[ -x /usr/sbin/mwan3track ] && /usr/sbin/mwan3track $INTERFACE $DEVICE $reliability $count $timeout $interval $down $up $track_ips &
	fi
}

mwan3_ifupdown()
{
	[ -n $DEVICE ] || exit 0
	[ -n $INTERFACE ] || exit 0
	[ "$(ip -4 route list table main dev $DEVICE default)" ] || exit 0

	while [ $(pgrep -f -o hotplug-call) -ne $$ ]; do
		sleep 1
	done

	config_load mwan3

	local total_interfaces
	local interface_number
	local check_iface

	mwan3_get_interfaces()
	{
		total_interfaces=$(($total_interfaces+1))
		config_get_bool enabled $1 enabled
		[ "$enabled" = "1" ] || return 0
		eval mwif$1=$total_interfaces
		[ "$1" = "$INTERFACE" ] || return 0
		interface_number=$total_interfaces
		check_iface=1
	}
	config_foreach mwan3_get_interfaces interface

	[ "$check_iface" = "1" ] || exit 0
	[ "$total_interfaces" -le "15" ] || exit 0

	logger -t mwan3 "$ACTION interface $INTERFACE ($DEVICE)"

	mwan3_basic_iptables
	mwan3_interface_iptables
	mwan3_connected_iptables
	mwan3_interface_routes_and_rules
	mwan3_policy_routes_and_rules

	[ $ACTION = "ifup" ] && mwan3_track
}

case "$ACTION" in
	ifup|ifdown)
		mwan3_ifupdown
	;;
esac
